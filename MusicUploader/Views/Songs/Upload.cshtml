@model MusicUploader.Models.BindingModels.Song.UploadSongBindingModel

@{
    ViewBag.Title = "Create";
}

<h2>Upload new song</h2>


@using (Html.BeginForm("Upload", "Songs", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SongName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SongName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SongName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AudioFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="audio/*" class="form-control" name="AudioFile" id="AudioFile"/>
                @Html.ValidationMessageFor(model => model.AudioFile, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" accept="image/*" class="form-control" name="ImageFile" id="ImageFile"/>
                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.GenreId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GenreId, new SelectList(ViewBag.Genres, "Id", "Name"), "~ Select genre ~", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to all songs", "Index", null, new { @class = "btn btn-danger"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
